#docker run --name jinyj-bullseye-vimenv -Pit --net=host  -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix  -v $HOME/.Xauthority:/root/.Xauthority -v /home/jinyj/data:/data/  -v /var/run/docker.sock:/var/run/docker.sock --privileged  --cap-add=ALL -v /sys/fs/cgroup:/sys/fs/cgroup:rw debian:bullseye /bin/bash

docker run --name jinyj-bullseye-vimenv -Pit -v /home/jinyj/data:/data/  -v /var/run/docker.sock:/var/run/docker.sock --privileged  --cap-add=ALL -v /sys/fs/cgroup:/sys/fs/cgroup:rw debian:bullseye /bin/bash

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
sed -i 's/deb.debian.org/10.111.69.170:4080/' /etc/apt/sources.list
apt update
apt install -y gcc wget python python3 git zsh neovim universal-ctags python3-neovim global ripgrep clang ccls vim-ale curl nodejs ssh npm build-essential fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev bc rsync silversearcher-ag

sed -i "s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g" /etc/ssh/sshd_config
mkdir /run/sshd
/usr/sbin/sshd
ssh-keygen
cp /data/work/bak/id_rsa_github.pub ~/.ssh/id_rsa.pub
cp /data/work/bak/id_rsa_github ~/.ssh/id_rsa

export all_proxy=10.128.5.109:3129

#python3 -m pip install --user --upgrade pynvim
#curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
#python -m pip install --user --upgrade pynvim


sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

vim ~/.config/nvim/init.vim
/*init.vim 即为vimrc，需要把所有~/.vim/vimrc的配置放到该文件*/

call plug#begin('~/.config/nvim/plugged')
Plug 'fatih/vim-go'
Plug 'gsiano/vmux-clipboard'
Plug 'vivien/vim-linux-coding-style'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'jackguo380/vim-lsp-cxx-highlight'
Plug 'ludovicchabant/vim-gutentags'
Plug 'skywind3000/gutentags_plus'
Plug 'skywind3000/vim-preview'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'vim-scripts/taglist.vim'
call plug#end()

启动vim
:PlugInstall

转到go.install, 安装所有go env

启动vim
:CocConfig

{
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
      "rootPatterns": [".ccls-root", "compile_commands.json"],
      "initializationOptions": {
        "cache": {
          "directory": "/tmp/ccls-cache"
        },
        "client": {
          "snippetSupport": true
        },
        "highlight": { "lsRanges": true }
      }
    },
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
      "filetypes": ["go"],
      "initializationOptions": {
        "usePlaceholders": true
      }
    }

  }
}

CocInstall coc-go

在源码工程目录下：
echo "clang++\n%cpp -std=c++17\n-Iheaders" > .ccls

touch .root
/*有.git就不需要，详见vimrc tags配置。*/


export all_proxy=
